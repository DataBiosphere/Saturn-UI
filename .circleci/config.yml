version: 2

jobs:
  test:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps1-{{ checksum "package.json" }}
            - deps1-
      - run: npm install
      - save_cache:
          key: deps1-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: npm test
      - persist_to_workspace:
          root: .
          paths:
            - ./node_modules
  build:
    docker:
      - image: node:8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run build
      - run: tar -czf build.tgz app.yaml build config
      - store_artifacts:
          path: build.tgz
      - persist_to_workspace:
          root: .
          paths:
            - app.yaml
            - build
            - config
  deploy-pr:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - attach_workspace:
          at: .
      - run: cp config/dev.json build/config.json
      - run: echo "$SA_KEY_JSON" > circleci-sa.json
      - run: gcloud auth activate-service-account --key-file=circleci-sa.json
      - deploy:
          name: Deploy
          command: |
            CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"
            if [[ ! -z "$CIRCLE_PR_NUMBER" ]]; then
              gcloud app deploy --project=bvdp-saturn-dev \
                --version="pr-$(expr "$CIRCLE_PR_NUMBER" % 10)" --no-promote --quiet
            fi
  deploy-dev:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - attach_workspace:
          at: /root/project
      - run: cp config/dev.json build/config.json
      - run: echo "$SA_KEY_JSON" > /tmp/sa.json
      - run: gcloud auth activate-service-account --key-file=/tmp/sa.json
      - deploy: gcloud app deploy --project=bvdp-saturn-dev --promote --quiet
workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy-pr:
          requires:
            - build
          filters:
            branches:
              ignore:
                - dev
                - prod
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: dev
